apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: oracle-rdbms-oradata
  namespace: default
  labels:
    app: oracle-rdbms
  annotations:
    sourceDBName: oracle-container-push
    envName: Postgres_Target
    vdbGroupName: K8s-Volumes
    vdbRepositoryName: Empty vFile Repository
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: de-fs-storage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oracle-rdbms-config
  namespace: default
  labels:
    app: oracle-rdbms
data:
  ORACLE_SID: "ORASTB1"
  ORACLE_PWD: "delphix"
  INIT_SGA_SIZE: "1500"
  INIT_PGA_SIZE: "500"
  ORACLE_EDITION: "enterprise"
  ORACLE_CHARACTERSET: "AL32UTF8"
  ENABLE_ARCHIVELOG: "true"
  ENABLE_TCPS: "true"
  # Clone DB, connections tring and datafile/redo destination should not be set for inside the K8S pod, as it's already been cloned inside the docker container in the staging/surrogate environment
  #CLONE_DB: "true"
  #PRIMARY_DB_CONN_STR: "10.160.1.21:1521/orasrc1.delphix.lab"
  #DATAFILE_DESTINATION: "/opt/oracle/oradata/ORASTB1/"
  #RECOVERY_AREA_DESTINATION: "/opt/oracle/oradata/ORASTB1/fast_recovery_area/onlinelog/"
  CONTAINER_DB: "false"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oracle-rdbms
  labels:
    app: oracle-rdbms
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oracle-rdbms
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: oracle-rdbms
    spec:
      securityContext:
        runAsUser: 54321
        fsGroup: 54321
      containers:
        - name: rdbms
          image: 533693045312.dkr.ecr.us-west-2.amazonaws.com/oracle-database:19.3.0-ee
          imagePullPolicy: IfNotPresent
          command: ["/opt/oracle/oradata/runOracle.sh"]
          envFrom:
            - configMapRef:
                name: oracle-rdbms-config
            - secretRef:
                name: oracle-rdbms-credentials
          ports:
            - containerPort: 1521
              name: oracle-listener
            - containerPort: 5500
              name: oem-express
          volumeMounts:
          - name: oradata
            mountPath: /opt/oracle/oradata
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 10
            exec:
              command:
              - /bin/sh
              - -c
              - /opt/oracle/oradata/checkDBStatus.sh
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 60
            timeoutSeconds: 10
            exec:
              command:
              - /bin/sh
              - -c
              - /opt/oracle/oradata/checkDBStatus.sh
      imagePullSecrets:
        - name: ecr-secret
      volumes:
        - name: oradata
          persistentVolumeClaim:
            claimName: oracle-rdbms-oradata
---
apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: default
  labels:
    app: oracle-rdbms
spec:
  ports:
    - name: listener
      port: 1521
      targetPort: oracle-listener
  selector:
    app: oracle-rdbms
